@use "../abstracts/variables" as variables;

/* *pseudo-elements are treated like the child of the element */
.btn {
	&,
	&:visited, &:link {
		text-transform: uppercase;
		text-decoration: none;
		padding: 1.5rem 4rem;
		border-radius: 10rem;
		/* Transition property must be in the initial state */
		transition: all 0.2s;
		position: relative;
		font-size: variables.$default-font-size;

		// Change for when used by a <button> element
		border: none;
		cursor: pointer;
	}
	
	&:hover {
		transform: translateY(-0.3rem);
		box-shadow: 0 1rem 2rem rgba(variables.$color-black, 0.2);

		&::after {
			transform: scaleX(1.4) scaleY(1.6);
			opacity: 0;
		}
	}

	&:active,
	&:focus {
		transform: translateY(-0.1rem);
		box-shadow: 0 0.5rem 1rem rgba(variables.$color-black, 0.2);
	}

	&--white {
		background-color: variables.$color-white;
		color: variables.$color-grey-dark-1;
		/* inline-block make treat it like text */
		display: inline-block; /* Useful if we want to five paddings, heights, etc */

		&::after {
  			background-color: variables.$color-white;
		}
	}

	&--green {
		background-color: variables.$color-primary;
		color: variables.$color-white;
		/* inline-block make treat it like text */
		display: inline-block; /* Useful if we want to five paddings, heights, etc */

		&::after {
  			background-color: variables.$color-primary;
		}
	}

	&::after {
		content: "";
		display: inline-block;
		height: 100%;
		width: 100%;
		border-radius: 10rem;
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all 0.4s;
	}

	&--animated {
		animation: moveInBottom 0.5s ease-out 0.75s;
		animation-fill-mode: backwards; /*Start to opacity 0 until the animation start */
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: variables.$default-font-size;
		color: variables.$color-primary;
		// When is only inline by default, we can use this to 
		// use the 'box model properties' on the element:
		display: inline-block;
		text-decoration: none;
		border-bottom: 1px solid variables.$color-primary;
		padding: 3px;
		// Remember, 3 or 1 px´s is so small that isn´t going to change sizes
		// if user decides to change the base font size.
		transition: all .2s;
	}

	&:hover {
		background-color: variables.$color-primary;
		color: variables.$color-white;
		box-shadow: 0 1rem 2rem rgba(variables.$color-black, .15);
		transform: translateY(-5px);
		border-radius: 12.5px;
	}

	&:active {
		box-shadow: 0 .5rem 1rem rgba(variables.$color-black, .15);
		transform: translateY(0px);

	}
}